--- glibc-2.7/nptl/sysdeps/unix/sysv/linux/sparc/lowlevellock.h.orig	2007-11-01 22:29:07.000000000 +0100
+++ glibc-2.7/nptl/sysdeps/unix/sysv/linux/sparc/lowlevellock.h	2007-11-01 22:29:39.000000000 +0100
@@ -120,7 +120,7 @@
 /* Returns non-zero if error happened, zero if success.  */
 #ifdef __sparc32_atomic_do_lock
 /* Avoid FUTEX_WAKE_OP if supporting pre-v9 CPUs.  */
-# define lll_futex_wake_unlock(futexp, nr_wake, nr_wake2, futexp2) 1
+# define lll_futex_wake_unlock(futexp, nr_wake, nr_wake2, futexp2, private) 1
 #else
 # define lll_futex_wake_unlock(futexp, nr_wake, nr_wake2, futexp2, private) \
   ({									      \
--- glibc-2.7/nptl/sysdeps/unix/sysv/linux/sparc/sparc32/sem_wait.c.orig	2007-11-01 23:11:22.000000000 +0100
+++ glibc-2.7/nptl/sysdeps/unix/sysv/linux/sparc/sparc32/sem_wait.c	2007-11-01 23:11:43.000000000 +0100
@@ -133,6 +133,7 @@
 __old_sem_wait (sem_t *sem)
 {
   struct sparc_old_sem *isem = (struct sparc_old_sem *) sem;
+  int *futex = (int *) sem; 
   int err;
   int val;
 
