2006-05-18  Jakub Jelinek  <jakub@redhat.com>

	* nis/nss_compat/compat-pwd.c (internal_setpwent): If nss_set*ent
	returned NSS_STATUS_UNAVAIL, still return NSS_STATUS_SUCCESS.
	* nis/nss_compat/compat-spwd.c (internal_setspent): Likewise.
	* nis/nss_compat/compat-grp.c (internal_setgrent): Likewise.

--- libc/nis/nss_compat/compat-grp.c	6 Jul 2005 21:04:53 -0000	1.30
+++ libc/nis/nss_compat/compat-grp.c	18 May 2006 14:51:05 -0000	1.31
@@ -138,7 +138,11 @@ internal_setgrent (ent_t *ent, int stayo
     rewind (ent->stream);
 
   if (status == NSS_STATUS_SUCCESS && nss_setgrent)
-    return nss_setgrent (stayopen);
+    {
+      status = nss_setgrent (stayopen);
+      if (status == NSS_STATUS_UNAVAIL)
+        status = NSS_STATUS_SUCCESS;
+    }
 
   return status;
 }
--- libc/nis/nss_compat/compat-pwd.c	6 Jul 2005 21:03:32 -0000	1.35
+++ libc/nis/nss_compat/compat-pwd.c	18 May 2006 14:51:05 -0000	1.36
@@ -258,7 +258,11 @@ internal_setpwent (ent_t *ent, int stayo
   give_pwd_free (&ent->pwd);
 
   if (status == NSS_STATUS_SUCCESS && nss_setpwent)
-    return nss_setpwent (stayopen);
+    {
+      status = nss_setpwent (stayopen);
+      if (status == NSS_STATUS_UNAVAIL)
+        status = NSS_STATUS_SUCCESS;
+    }
 
   return status;
 }
--- libc/nis/nss_compat/compat-spwd.c	6 Jul 2005 21:02:30 -0000	1.28
+++ libc/nis/nss_compat/compat-spwd.c	18 May 2006 14:51:05 -0000	1.29
@@ -212,7 +212,11 @@ internal_setspent (ent_t *ent, int stayo
   give_spwd_free (&ent->pwd);
 
   if (status == NSS_STATUS_SUCCESS && nss_setspent)
-    return nss_setspent (stayopen);
+    {
+      status = nss_setspent (stayopen);
+      if (status == NSS_STATUS_UNAVAIL)
+        status = NSS_STATUS_SUCCESS;
+    }
 
   return status;
 }
